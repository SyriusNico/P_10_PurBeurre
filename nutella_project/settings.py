"""
Django settings for nutella_project project.

Generated by 'django-admin startproject' using Django 3.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os
import django_heroku

from selenium import webdriver

# Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR = Path(__file__).resolve().parent.parent
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get(
    'SECRET_KEY',
    'django-insecure-8z1t2)awwqen=bx==l2doak57wkou5%#81%565wbftgrn6$j$j'
)
if os.environ.get('ENV') == "PRODUCTION":
    DEBUG = False
    STATIC_ROOT = os.environ.join(BASE_DIR, 'staticfiles')

    STATICFILES_DIRS = (
        os.path.join(BASE_DIR, 'static'),
    )
    STATICFILES_STORAGE = \
        'whitenoise.storage.CompressedManifestStaticFilesStorage'
else:
    DEBUG = True



ALLOWED_HOSTS = ["purbeurre-app.herokuapp.com","localhost", "127.0.0.1"]


# Application definition

INSTALLED_APPS = [



    'foods.apps.FoodsConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'authentication.apps.AuthenticationConfig',
    'pages.apps.PagesConfig',
    'crispy_forms',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

ROOT_URLCONF = 'nutella_project.urls'


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'nutella_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'PurBeurre',
        'USER': 'postgres',
        'PASSWORD': 'popi',
        'HOST': '',
        'PORT': '5432',
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'fr'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]


# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'authentication.User'
LOGIN_URL = 'login'
LOGIN_REDIRECT_URL = 'profile'
LOGOUT_REDIRECT_URL = 'index'

INTERNAL_IPS = ['127.0.0.1']

# Activate Django-Heroku.
django_heroku.settings(locals())

# Food setting 
# You can add some categories from https://fr.openfoodfacts.org/categories
CATEGORIES_LIST = [
    'Produit à tartiner',
    'Petit-déjeuners',
    'sauces',
    'fromages',
    'legumineuses',
    'Fruits',
    'Pâtisseries',
    'Biscuits et gâteaux',
    'Boissons'
    ]

NB_RESULT = 30

# #selenium settings
# headless_chrome_options = webdriver.ChromeOptions()
# headless_chrome_options.add_argument("--headless")
# headless_chrome_options.add_argument("--disable-gpu")
# headless_chrome_options.add_argument("--no-sandbox")
# headless_chrome_options.add_argument("--disable-dev-shm-usage")

# SELENIUM_WEBDRIVERS = {
#     "default": {"callable": webdriver.Chrome, "args": (), "kwargs": {}},
#     "firefox": {"callable": webdriver.Firefox, "args": (), "kwargs": {}},
#     "chrome-headless": {
#         "callable": webdriver.Chrome,
#         "args": (),
#         "kwargs": {"options": headless_chrome_options},
#     },
# }